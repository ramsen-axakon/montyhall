{"version":3,"sources":["assets/img/dollar.png","game.js","components/Message.js","components/Button.js","components/Box.js","components/Statistics.js","App.js","index.js"],"names":["module","exports","Game","new","boxes","id","isRevealed","hasMoney","isPicked","moneyIndex","randomIndex","map","box","index","state","pickBox","game","boxId","revealedBox","find","hasWon","Math","floor","random","Message","text","className","Button","isLoading","type","onClick","disabled","children","Box","style","opacity","border","backgroundColor","backgroundImage","dollar","backgroundRepeat","console","log","Statistics","data","keptPercentage","keptWins","playedRounds","toFixed","switchPercentage","switchedWins","isNaN","App","useState","setGame","isSimulating","setIsSimulating","statistics","setStatistics","simulateRounds","shouldKeep","iterations","result","firstPickId","isSelected","setTimeout","_prev","push","switched","instructionMessage","key","kept","keptResult","reduce","acc","run","switchedResult","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1482d937.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dollar.3ea96691.png\";","const Game = {\n  new: () => {\n    const boxes = [\n      { id: 0, isRevealed: false, hasMoney: false, isPicked: false },\n      { id: 1, isRevealed: false, hasMoney: false, isPicked: false },\n      { id: 2, isRevealed: false, hasMoney: false, isPicked: false },\n    ];\n    const moneyIndex = randomIndex(boxes);\n    return {\n      boxes: boxes.map((box, index) => {\n        return index === moneyIndex ? { ...box, hasMoney: true } : box;\n      }),\n      state: \"FIRST_PICK\",\n    };\n  },\n  pickBox: (game, boxId) => {\n    let boxes = game.boxes;\n    boxes = boxes.map((box) =>\n      box.id === boxId ? { ...box, isPicked: true } : box\n    );\n    const revealedBox = boxes.find((box) => !box.isPicked && !box.hasMoney);\n    if (game.state === \"FIRST_PICK\") {\n      return {\n        ...game,\n        state: \"SECOND_PICK\",\n        boxes: boxes.map((box) => {\n          return revealedBox.id === box.id ? { ...box, isRevealed: true } : box;\n        }),\n      };\n    }\n    return {\n      ...game,\n      state: \"FINISHED\",\n      hasWon: game.boxes[boxId].hasMoney,\n      boxes: boxes.map((box) => ({ ...box, isRevealed: true })),\n    };\n  },\n};\n\nconst randomIndex = () => Math.floor(Math.random() * 3);\n\nexport default Game;\n","import React from \"react\";\n\nexport default function Message({ text }) {\n  return (\n    <div className=\"message\">\n      {text}\n      <span className=\"message-bubble\"></span>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Button({\n  isLoading = false,\n  type = \"primary\",\n  onClick,\n  disabled,\n  children,\n}) {\n  return (\n    <button className={`button ${type}`} onClick={onClick} disabled={disabled}>\n      {isLoading ? <div className=\"loader\"></div> : children}\n    </button>\n  );\n}\n","import React from \"react\";\nimport dollar from \"../assets/img/dollar.png\";\n\nexport default function Box({\n  isRevealed,\n  hasMoney,\n  isPicked,\n  disabled,\n  children,\n  onClick,\n}) {\n  let style;\n\n  if (!isRevealed) {\n    style = { opacity: \"1\" };\n  }\n\n  if (isRevealed) {\n    style = { opacity: \"0.2\" };\n  }\n  if (isPicked) {\n    style = { border: \"12px solid white\" };\n  }\n\n  if (isRevealed && hasMoney) {\n    style = {\n      backgroundColor: \"#92bb92\",\n      backgroundImage: `url(${dollar})`,\n      backgroundRepeat: \"repeat\",\n    };\n  }\n  console.log(isPicked);\n  return (\n    <button className=\"box\" style={style} onClick={onClick} disabled={disabled}>\n      <span>{children}</span>\n    </button>\n  );\n}\n","import React from \"react\";\n\nexport default function Statistics({ data }) {\n  const keptPercentage = ((data.keptWins / data.playedRounds) * 100).toFixed(1);\n  const switchPercentage = (\n    (data.switchedWins / data.playedRounds) *\n    100\n  ).toFixed(1);\n\n  return (\n    <div className=\"statistics\">\n      <div>Keep</div>\n\n      <div className=\"statistics-row\">\n        <div className=\"statistics-data\">\n          <b>Count:</b>\n          {` ${data.playedRounds}`}\n        </div>\n\n        <div className=\"statistics-data\">\n          <b>Odds:</b>\n          {!isNaN(keptPercentage) ? ` ${keptPercentage} %` : \" 0 %\"}\n        </div>\n      </div>\n\n      <div className=\"separator\" />\n\n      <div>Switch</div>\n\n      <div className=\"statistics-row\">\n        <div className=\"statistics-data\">\n          <b>Count:</b>\n          {` ${data.playedRounds}`}\n        </div>\n\n        <div className=\"statistics-data\">\n          <b>Odds:</b>\n          {!isNaN(switchPercentage) ? ` ${switchPercentage} %` : \" 0 %\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\r\nimport Game from \"./game\";\r\nimport Message from \"./components/Message\";\r\nimport Button from \"./components/Button\";\r\nimport Box from \"./components/Box\";\r\nimport Statistics from \"./components/Statistics\";\r\n\r\nfunction App() {\r\n  const [game, setGame] = useState(Game.new());\r\n  const [isSimulating, setIsSimulating] = useState(false);\r\n  const [statistics, setStatistics] = useState({\r\n    switchedWins: 0,\r\n    keptWins: 0,\r\n    playedRounds: 0,\r\n  });\r\n\r\n  const pickBox = (id) => setGame(Game.pickBox(game, id));\r\n\r\n  const resetGame = () => {\r\n    setStatistics({ ...statistics, playedRounds: statistics.playedRounds + 1 });\r\n    setGame(Game.new());\r\n  };\r\n\r\n  const runSimulation = () => {\r\n    setIsSimulating(true);\r\n    const iterations = 1000;\r\n    const kept = simulateRounds(true, iterations);\r\n    const switched = simulateRounds(false, iterations);\r\n\r\n    const keptResult = kept.reduce((acc, run) => {\r\n      if (run.hasWon) return acc + 1;\r\n      return acc;\r\n    }, 0);\r\n\r\n    const switchedResult = switched.reduce((acc, run) => {\r\n      if (run.hasWon) return acc + 1;\r\n      return acc;\r\n    }, 0);\r\n\r\n    setStatistics({\r\n      switchedWins: switchedResult,\r\n      keptWins: keptResult,\r\n      playedRounds: iterations,\r\n    });\r\n    setTimeout(() => {\r\n      setIsSimulating(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const simulateRounds = (shouldKeep, iterations) => {\r\n    let result = [];\r\n    for (let index = 0; index < iterations; index++) {\r\n      let game = Game.new();\r\n      const firstPickId = Math.floor(Math.random() * 3);\r\n\r\n      game = Game.pickBox(game, firstPickId);\r\n      if (shouldKeep) {\r\n        game = Game.pickBox(game, firstPickId);\r\n      } else {\r\n        game = Game.pickBox(\r\n          game,\r\n          game.boxes.find((box) => !box.isSelected && !box.isRevealed).id\r\n        );\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setGame((_prev) => {\r\n          return game;\r\n        });\r\n      }, 100);\r\n\r\n      result.push({ hasWon: game.hasWon, switched: !shouldKeep });\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const instructionMessage = () => {\r\n    switch (game.state) {\r\n      case \"FIRST_PICK\":\r\n        return \"Welcome contender! Please, pick a box!\";\r\n\r\n      case \"SECOND_PICK\":\r\n        return \"Switch or keep your box!\";\r\n\r\n      case \"FINISHED\":\r\n        if (game.hasWon) {\r\n          return \"You won the money!\";\r\n        } else {\r\n          return \"Too bad, you did not win the money, try again!\";\r\n        }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"container \">\r\n        <Message\r\n          text={\r\n            isSimulating\r\n              ? \"Running simulation, please wait!\"\r\n              : instructionMessage()\r\n          }\r\n        />\r\n\r\n        <div className=\"boxes\">\r\n          {game.boxes.map((box) => (\r\n            <Box\r\n              key={box.id}\r\n              disabled={box.isRevealed || game.state === \"FINISHED\"}\r\n              isRevealed={box.isRevealed}\r\n              hasMoney={box.hasMoney}\r\n              isPicked={box.isPicked}\r\n              onClick={() => pickBox(box.id)}\r\n            >\r\n              {box.id + 1}\r\n            </Box>\r\n          ))}\r\n        </div>\r\n\r\n        <Button onClick={resetGame} disabled={game.state === \"FIRST_PICK\"}>\r\n          Reset\r\n        </Button>\r\n\r\n        <Button\r\n          type=\"secondary\"\r\n          isLoading={isSimulating}\r\n          onClick={runSimulation}\r\n        >\r\n          Run simulation\r\n        </Button>\r\n\r\n        <Statistics data={statistics} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}