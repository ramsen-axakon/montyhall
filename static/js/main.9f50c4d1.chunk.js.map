{"version":3,"sources":["assets/img/monty_1.jpg","assets/img/monty_2.jpg","assets/img/monty_3.jpg","assets/img/monty_4.jpeg","assets/img/monty_5.jpg","assets/img/monty_6.jpg","utils/montyImages.js","utils/getRandomHelper.js","selectors.js","features/Message/Message.js","constants.js","actions.js","features/Boxes/Box.js","components/Button/Button.js","features/Boxes/Boxes.js","features/Statistics/Statistics.js","App.js","utils/initialHelper.js","reducer.js","rootReducer.js","store.js","serviceWorker.js","index.js"],"names":["module","exports","montyImages","monty0","monty1","monty2","monty3","monty4","monty5","getRandomMonty","Math","ceil","random","getBoxes","app","boxes","getStep","step","Boxes","currentStep","useSelector","pickedBoxWithMoney","filter","box","money","pickedBox","className","length","createMessage","setPickedBox","type","setStep","Box","callBack","data","id","isReveleadByHost","displayValueOfBox","valueOfBox","onClick","disabled","style","opacity","Button","text","allBoxes","dispatch","useDispatch","useEffect","dispatchResetGame","nextStepHandler","dispatchPickFirstBox","dispatchSwitchBox","map","key","Statistics","keptStatistics","getKeptStatistics","switchedStatistics","getSwitchedStatistics","count","percentage","App","backgroundImage","initialBoxes","initialStatistics","won","initialState","currentBox","switchedBox","reducer","produce","draft","action","min","max","number","setPercentage","win","toFixed","losingBoxes","current","openNumber","floor","openBox","appReducer","combineReducers","rootReducer","state","composeEnhancers","createLogger","stateTransformer","newState","Object","keys","i","compose","store","createStore","applyMiddleware","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f50c4d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/monty_1.61b92ce6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/monty_2.ed8b4911.jpg\";","module.exports = __webpack_public_path__ + \"static/media/monty_3.64641eb2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/monty_4.5f4d136d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/monty_5.de75b8d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/monty_6.726d9044.jpg\";","import monty0 from \".././assets/img/monty_1.jpg\";\nimport monty1 from \".././assets/img/monty_2.jpg\";\nimport monty2 from \".././assets/img/monty_3.jpg\";\nimport monty3 from \".././assets/img/monty_4.jpeg\";\nimport monty4 from \".././assets/img/monty_5.jpg\";\nimport monty5 from \".././assets/img/monty_6.jpg\";\n\nconst montyImages = [monty0, monty1, monty2, monty3, monty4, monty5];\n\nexport default montyImages;\n","export function getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n}\n\nexport function getRandomBox(number) {\n  return Math.floor(Math.random() * (number - 0) + 0);\n}\n\nexport const getRandomMonty = Math.ceil(Math.random() * (6 - 0) + 0) - 1;\n","export const getBoxes = (app) => app.boxes ?? [];\nexport const getCurrentBox = (app) => app.currentBox ?? {};\nexport const getStep = (app) => app.step ?? \"\";\nexport const getSwitchedStatistics = (app) => app.switchedStatistics ?? {};\nexport const getKeptStatistics = (app) => app.keptStatistics ?? {};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getStep, getBoxes } from \"../../selectors\";\nimport {\n  PICK_FIRST_BOX,\n  KEEP_OR_SWITCH_BOX,\n  DISPLAY_RESULT,\n} from \"../../constants\";\n\nimport \"./Message.css\";\n\nexport default function Boxes() {\n  const currentStep = useSelector(({ app }) => getStep(app));\n  const allBoxes = useSelector(({ app }) => getBoxes(app));\n\n  const pickedBoxWithMoney = allBoxes.filter(\n    (box) => box.money && box.pickedBox\n  );\n\n  function createMessage() {\n    switch (currentStep) {\n      case PICK_FIRST_BOX:\n        return \"Welcome contender! Please, pick a box!\";\n\n      case KEEP_OR_SWITCH_BOX:\n        return \"Click on the numbered box to switch or the button to keep your box!\";\n\n      case DISPLAY_RESULT:\n        if (pickedBoxWithMoney.length) {\n          return \"You won the money!\";\n        } else {\n          return \"Too bad, you did not win the money, try again!\";\n        }\n\n      default:\n        return;\n    }\n  }\n\n  return (\n    <div className=\"message\">\n      {createMessage()}\n      <span className=\"message-bubble\"></span>\n    </div>\n  );\n}\n","export const SET_PICKED_BOX = \"SET_PICKED_BOX\";\nexport const RESET_GAME = \"RESET_GAME\";\nexport const REVELE_EMPTY_BOX = \"REVELE_EMPTY_BOX\";\nexport const INIT_BOX_WITH_MONEY = \"INIT_BOX_WITH_MONEY\";\nexport const DISPLAY_SECOND_BOX = \"DISPLAY_SECOND_BOX\";\nexport const DISPLAY_RESULT = \"DISPLAY_RESULT\";\nexport const PICK_FIRST_BOX = \"PICK_FIRST_BOX\";\nexport const KEEP_OR_SWITCH_BOX = \"KEEP_OR_SWITCH_BOX\";\nexport const SET_STEP = \"SET_STEP\";\nexport const SWITCH_BOX = \"SWITCH_BOX\";\nexport const SET_SWITCHED_STATISTICS = \"SET_SWITCHED_STATISTICS\";\nexport const SET_KEPT_STATISTICS = \"SET_KEPT_STATISTICS\";\n","import {\n  SET_PICKED_BOX,\n  RESET_GAME,\n  REVELE_EMPTY_BOX,\n  INIT_BOX_WITH_MONEY,\n  SET_STEP,\n  SWITCH_BOX,\n  SET_SWITCHED_STATISTICS,\n  SET_KEPT_STATISTICS,\n} from \"./constants\";\n\nexport function setPickedBox(pickedBox) {\n  return {\n    type: SET_PICKED_BOX,\n    pickedBox,\n  };\n}\n\nexport function resetGame() {\n  return {\n    type: RESET_GAME,\n  };\n}\n\nexport function reveleEmptyBox() {\n  return {\n    type: REVELE_EMPTY_BOX,\n  };\n}\n\nexport function initBoxWithMoney() {\n  return {\n    type: INIT_BOX_WITH_MONEY,\n  };\n}\n\nexport function setStep(step) {\n  return {\n    type: SET_STEP,\n    step,\n  };\n}\n\nexport function switchBox(pickedBox) {\n  return {\n    type: SWITCH_BOX,\n    pickedBox,\n  };\n}\n\nexport function setSwitchedStatistics() {\n  return {\n    type: SET_SWITCHED_STATISTICS,\n  };\n}\n\nexport function setKeptStatistics() {\n  return {\n    type: SET_KEPT_STATISTICS,\n  };\n}\n","import React from \"react\";\nimport { DISPLAY_RESULT } from \"../../constants\";\n\nimport \"./Box.css\";\n\nexport default function Box({ callBack, data, step }) {\n  const { id, isReveleadByHost, money, pickedBox } = data;\n  const displayValueOfBox = isReveleadByHost || step === DISPLAY_RESULT;\n  const valueOfBox = <div className={money ? \"money\" : \"empty\"}></div>;\n\n  return (\n    <button\n      onClick={() => callBack(data)}\n      className=\"box\"\n      disabled={isReveleadByHost || pickedBox || step === DISPLAY_RESULT}\n      style={isReveleadByHost ? { opacity: \"0.2\" } : { opacity: \"1\" }}\n    >\n      {displayValueOfBox ? (\n        valueOfBox\n      ) : pickedBox ? (\n        <span className=\"circel\">?</span>\n      ) : (\n        <span className=\"circel\">{id + 1}</span>\n      )}\n    </button>\n  );\n}\n","import React from \"react\";\n\nimport \"./Button.css\";\n\nexport default function Button({ className, onClick, text, disabled }) {\n  return (\n    <button className={className} onClick={onClick} disabled={disabled}>\n      {text}\n    </button>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setPickedBox,\n  resetGame,\n  reveleEmptyBox,\n  initBoxWithMoney,\n  setStep,\n  setSwitchedStatistics,\n  setKeptStatistics,\n} from \"../../actions\";\n\nimport { getBoxes, getStep } from \"../../selectors\";\nimport {\n  PICK_FIRST_BOX,\n  KEEP_OR_SWITCH_BOX,\n  DISPLAY_RESULT,\n} from \"../../constants\";\n\nimport Box from \"./Box\";\nimport Button from \"../../components/Button/Button\";\n\nimport \"./Boxes.css\";\n\nexport default function Boxes() {\n  const allBoxes = useSelector(({ app }) => getBoxes(app));\n  const currentStep = useSelector(({ app }) => getStep(app));\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatchResetGame();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const dispatchResetGame = () => {\n    dispatch(resetGame());\n    dispatch(initBoxWithMoney());\n  };\n\n  const dispatchKeepBox = () => {\n    dispatch(setKeptStatistics());\n    dispatch(setStep(DISPLAY_RESULT));\n  };\n\n  const dispatchPickFirstBox = (pickedBox) => {\n    dispatch(setPickedBox(pickedBox));\n    dispatch(reveleEmptyBox());\n    dispatch(setStep(KEEP_OR_SWITCH_BOX));\n  };\n\n  const dispatchSwitchBox = (pickedBox) => {\n    dispatch(setPickedBox(pickedBox));\n\n    dispatch(setSwitchedStatistics());\n    dispatch(setStep(DISPLAY_RESULT));\n  };\n\n  function nextStepHandler(pickedBox) {\n    switch (currentStep) {\n      case PICK_FIRST_BOX:\n        return dispatchPickFirstBox(pickedBox);\n\n      case KEEP_OR_SWITCH_BOX:\n        return dispatchSwitchBox(pickedBox);\n\n      case DISPLAY_RESULT:\n        return dispatchResetGame();\n\n      default:\n        return;\n    }\n  }\n  return (\n    <>\n      <div className=\"boxes\">\n        {allBoxes.map((box) => {\n          return (\n            <Box\n              key={box.id}\n              callBack={nextStepHandler}\n              data={box}\n              step={currentStep}\n            />\n          );\n        })}\n      </div>\n      <Button\n        className=\"button button-green\"\n        onClick={dispatchKeepBox}\n        text=\"Click here to keep box!\"\n        disabled={currentStep !== KEEP_OR_SWITCH_BOX}\n      />\n\n      <Button\n        className={\"button\"}\n        onClick={dispatchResetGame}\n        text={\"Restart game\"}\n        disabled={currentStep !== DISPLAY_RESULT}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getSwitchedStatistics, getKeptStatistics } from \"../../selectors\";\n\nimport \"./Statistics.css\";\n\nexport default function Statistics() {\n  const keptStatistics = useSelector(({ app }) => getKeptStatistics(app));\n  const switchedStatistics = useSelector(({ app }) =>\n    getSwitchedStatistics(app)\n  );\n\n  return (\n    <div className=\"statistics\">\n      <div>Keep</div>\n      <div className=\"statistics-row\">\n        <div className=\"statistics-data\">\n          <b>Count:</b>\n          {` ${keptStatistics.count}`}\n        </div>\n        <div className=\"statistics-data\">\n          <b>Odds:</b>\n          {` ${keptStatistics.percentage} %`}\n        </div>\n      </div>\n\n      <div className=\"separator\" />\n\n      <div>Switch</div>\n      <div className=\"statistics-row\">\n        <div className=\"statistics-data\">\n          <b>Count:</b>\n          {` ${switchedStatistics.count}`}\n        </div>\n        <div className=\"statistics-data\">\n          <b>Odds:</b>\n          {` ${switchedStatistics.percentage} %`}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport montyImages from \"./utils/montyImages\";\r\nimport { getRandomMonty } from \"./utils/getRandomHelper\";\r\nimport Message from \"./features/Message/Message\";\r\nimport Boxes from \"./features/Boxes/Boxes\";\r\nimport Statistics from \"./features/Statistics/Statistics\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div\r\n      className=\"app\"\r\n      style={{\r\n        backgroundImage: `url(${montyImages[getRandomMonty]})`,\r\n      }}\r\n    >\r\n      <div className=\"container\">\r\n        <Message />\r\n        <Boxes />\r\n        <Statistics />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const initialBoxes = [\n  { id: 0, isReveleadByHost: false, money: false, pickedBox: false },\n  { id: 1, isReveleadByHost: false, money: false, pickedBox: false },\n  { id: 2, isReveleadByHost: false, money: false, pickedBox: false },\n];\n\nexport const initialStatistics = {\n  count: 0,\n  percentage: 0,\n  won: 0,\n};\n","import produce, { current } from \"immer\";\nimport * as constants from \"./constants\";\nimport { getRandomInt, getRandomBox } from \"./utils/getRandomHelper\";\nimport { initialBoxes, initialStatistics } from \"./utils/initialHelper\";\n\nconst initialState = {\n  boxes: initialBoxes,\n  currentBox: {},\n  step: constants.PICK_FIRST_BOX,\n  switchedBox: false,\n  switchedStatistics: initialStatistics,\n  keptStatistics: initialStatistics,\n};\n\nconst reducer = produce((draft, action) => {\n  const { step, type, pickedBox } = action;\n\n  function setPercentage(win, count) {\n    const gamesPlayed = count;\n    const gamesWon = win * 100;\n    return (gamesWon / gamesPlayed).toFixed(1);\n  }\n\n  // eslint-disable-next-line default-case\n  switch (type) {\n    case constants.SET_SWITCHED_STATISTICS:\n      draft.switchedStatistics.count += 1;\n      if (draft.currentBox.money) {\n        draft.switchedStatistics.won += 1;\n      }\n      draft.switchedStatistics.percentage = setPercentage(\n        draft.switchedStatistics.won,\n        draft.switchedStatistics.count\n      );\n\n      return draft;\n\n    case constants.SET_KEPT_STATISTICS:\n      draft.keptStatistics.count += 1;\n      if (draft.currentBox.money) {\n        draft.keptStatistics.won += 1;\n      }\n      draft.keptStatistics.percentage = setPercentage(\n        draft.keptStatistics.won,\n        draft.keptStatistics.count\n      );\n      return draft;\n\n    case constants.SET_STEP:\n      draft.step = step;\n      return draft;\n\n    case constants.SET_PICKED_BOX:\n      if (draft.step === constants.PICK_FIRST_BOX) {\n        draft.boxes[pickedBox.id].pickedBox = true;\n        draft.currentBox = draft.boxes[pickedBox.id];\n      }\n\n      if (draft.step === constants.KEEP_OR_SWITCH_BOX) {\n        draft.boxes[draft.currentBox.id].pickedBox = false;\n        draft.boxes[pickedBox.id].pickedBox = true;\n        draft.currentBox = draft.boxes[pickedBox.id];\n      }\n\n      return draft;\n\n    case constants.RESET_GAME:\n      draft.boxes = initialBoxes;\n      draft.step = constants.PICK_FIRST_BOX;\n      return draft;\n\n    case constants.REVELE_EMPTY_BOX:\n      const currentBoxes = current(draft.boxes);\n      const losingBoxes = currentBoxes.filter((box) => !box.money);\n      const openNumber = getRandomBox(losingBoxes.length);\n      let openBox = losingBoxes[openNumber];\n      if (openBox.pickedBox) {\n        openBox = losingBoxes[+!openNumber];\n      }\n      draft.boxes[openBox.id].isReveleadByHost = true;\n\n      return draft;\n\n    case constants.INIT_BOX_WITH_MONEY:\n      draft.boxes[getRandomInt(0, 3)].money = true;\n      return draft;\n  }\n}, initialState);\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport reducer from \"./reducer\";\n\nconst appReducer = combineReducers({\n  app: reducer,\n});\n\nconst rootReducer = (state, action) => {\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst loggerMiddleware = createLogger({\r\n  stateTransformer: (state) => {\r\n    const newState = {};\r\n\r\n    for (const i of Object.keys(state)) {\r\n      newState[i] = state[i];\r\n    }\r\n    return newState;\r\n  },\r\n});\r\n\r\nlet composeEnhancers = compose;\r\nif (process.env.NODE_ENV === \"development\") {\r\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n}\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    process.env.NODE_ENV === \"development\"\r\n      ? applyMiddleware(loggerMiddleware)\r\n      : applyMiddleware()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}