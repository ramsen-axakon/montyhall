{"version":3,"sources":["assets/img/monty_1.jpg","assets/img/monty_2.jpg","assets/img/monty_3.jpg","assets/img/monty_4.jpeg","assets/img/monty_5.jpg","assets/img/monty_6.jpg","selectors.js","utils/montyImages.js","utils/getRandomHelper.js","Message.js","constants.js","actions.js","utils/initialBoxes.js","Box.js","Button.js","Boxes.js","Score.js","App.js","reducer.js","rootReducer.js","store.js","serviceWorker.js","index.js"],"names":["module","exports","getBoxes","app","boxes","getStep","step","montyImages","monty0","monty1","monty2","monty3","monty4","monty5","getRandomMonty","Math","ceil","random","Boxes","currentStep","useSelector","pickedBoxWithMoney","filter","box","money","pickedBox","className","length","createMessage","setStep","data","type","initialBoxes","id","isReveleadByHost","Box","callBack","displayValueOfBox","valueOfBox","onClick","disabled","style","opacity","Button","text","allBoxes","dispatch","useDispatch","useEffect","dispatchResetBoxes","dispatchPickedBox","setPickedBox","setIsReveleadByHost","map","key","Score","switched","kept","count","percentage","App","score","getScore","backgroundImage","initialState","win","switchedBox","reducer","produce","draft","action","min","max","number","setPercentage","toFixed","losingBoxes","current","openNumber","floor","openBox","appReducer","combineReducers","rootReducer","state","composeEnhancers","createLogger","stateTransformer","newState","Object","keys","i","compose","store","createStore","applyMiddleware","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e5b1974f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/monty_1.61b92ce6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/monty_2.ed8b4911.jpg\";","module.exports = __webpack_public_path__ + \"static/media/monty_3.64641eb2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/monty_4.5f4d136d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/monty_5.de75b8d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/monty_6.726d9044.jpg\";","export const getBoxes = (app) => app.boxes ?? {};\nexport const getStep = (app) => app.step ?? \"\";\nexport const getScore = (app) => app.score ?? {};\n","import monty0 from \".././assets/img/monty_1.jpg\";\nimport monty1 from \".././assets/img/monty_2.jpg\";\nimport monty2 from \".././assets/img/monty_3.jpg\";\nimport monty3 from \".././assets/img/monty_4.jpeg\";\nimport monty4 from \".././assets/img/monty_5.jpg\";\nimport monty5 from \".././assets/img/monty_6.jpg\";\n\nconst montyImages = [monty0, monty1, monty2, monty3, monty4, monty5];\n\nexport default montyImages;\n","export function getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n}\n\nexport function getRandomBox(number) {\n  return Math.floor(Math.random() * (number - 0) + 0);\n}\n\nexport const getRandomMonty = Math.ceil(Math.random() * (6 - 0) + 0) - 1;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getStep, getBoxes } from \"./selectors\";\nimport { PICK_FIRST_BOX, PICK_THIRD_BOX, DISPLAY_RESULT } from \"./constants\";\n\nimport \"./Message.css\";\n\nexport default function Boxes() {\n  const currentStep = useSelector(({ app }) => getStep(app));\n  const allBoxes = useSelector(({ app }) => getBoxes(app));\n\n  const pickedBoxWithMoney = allBoxes.filter(\n    (box) => box.money === true && box.pickedBox === true\n  );\n\n  function createMessage() {\n    switch (currentStep) {\n      case PICK_FIRST_BOX:\n        return \"Welcome contender! Please, pick a box!\";\n\n      case PICK_THIRD_BOX:\n        return \"Let's make a deal! Click on the numberd box to switch or the button to keep your box!\";\n      case DISPLAY_RESULT:\n        if (pickedBoxWithMoney.length) {\n          return \"You won the money!\";\n        } else {\n          return \"Sorry, you did not win the money! Try again!\";\n        }\n      default:\n        return;\n    }\n  }\n  return (\n    <div className=\"message\">\n      {createMessage()}\n      <span className=\"message-bubble\"></span>\n    </div>\n  );\n}\n","export const BOX_NUMBER_ONE = \"BOX_NUMBER_ONE\";\nexport const BOX_NUMBER_TWO = \"BOX_NUMBER_TWO\";\nexport const BOX_NUMBER_THREE = \"BOX_NUMBER_THREE\";\nexport const MONEY = \"MONEY\";\nexport const EMPTY = \"EMPTY\";\nexport const SET_PICKED_BOX = \"SET_PICKED_BOX\";\nexport const RESET_BOXES = \"RESET_BOXES\";\nexport const SET_IS_REVELEAD_BY_HOST = \"SET_IS_REVELEAD_BY_HOST\";\nexport const SET_BOX_WITH_MONEY = \"SET_BOX_WITH_MONEY\";\nexport const DISPLAY_SECOND_BOX = \"DISPLAY_SECOND_BOX\";\nexport const DISPLAY_RESULT = \"DISPLAY_RESULT\";\nexport const PICK_FIRST_BOX = \"PICK_FIRST_BOX\";\nexport const PICK_THIRD_BOX = \"PICK_THIRD_BOX\";\nexport const SET_STEP = \"SET_STEP\";\nexport const SWITCH_BOX = \"SWITCH_BOX\";\n","import {\n  SET_PICKED_BOX,\n  RESET_BOXES,\n  SET_IS_REVELEAD_BY_HOST,\n  SET_BOX_WITH_MONEY,\n} from \"./constants\";\n\nexport function setPickedBox(data) {\n  return {\n    type: SET_PICKED_BOX,\n    data,\n  };\n}\n\nexport function resetBoxes(boxes) {\n  return {\n    type: RESET_BOXES,\n    boxes,\n  };\n}\n\nexport function setIsReveleadByHost(data) {\n  return {\n    type: SET_IS_REVELEAD_BY_HOST,\n    data,\n  };\n}\n\nexport function setBoxWithMoney() {\n  return {\n    type: SET_BOX_WITH_MONEY,\n  };\n}\n\nexport function setStep(step, data) {\n  return {\n    type: step,\n    data,\n  };\n}\n","const initialBoxes = [\n  { id: 0, isReveleadByHost: false, money: false, pickedBox: false },\n  { id: 1, isReveleadByHost: false, money: false, pickedBox: false },\n  { id: 2, isReveleadByHost: false, money: false, pickedBox: false },\n];\n\nexport default initialBoxes;\n","import React from \"react\";\nimport { DISPLAY_RESULT } from \"./constants\";\n\nimport \"./Box.css\";\n\nexport default function Box({ callBack, data, step }) {\n  const { id, isReveleadByHost, money, pickedBox } = data;\n  const displayValueOfBox = isReveleadByHost || step === DISPLAY_RESULT;\n  const valueOfBox = <div className={money ? \"money\" : \"empty\"}></div>;\n\n  return (\n    <button\n      onClick={() => callBack(data, step)}\n      className=\"box\"\n      disabled={isReveleadByHost || pickedBox || step === DISPLAY_RESULT}\n      style={isReveleadByHost ? { opacity: \"0.5\" } : { opacity: \"1\" }}\n    >\n      {displayValueOfBox ? (\n        valueOfBox\n      ) : pickedBox ? (\n        <span className=\"circel\">?</span>\n      ) : (\n        <span className=\"circel\">{id + 1}</span>\n      )}\n    </button>\n  );\n}\n","import React from \"react\";\n\nimport \"./Button.css\";\n\nexport default function Button({ className, onClick, text, disabled }) {\n  return (\n    <button className={className} onClick={onClick} disabled={disabled}>\n      {text}\n    </button>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setPickedBox,\n  resetBoxes,\n  setIsReveleadByHost,\n  setBoxWithMoney,\n  setStep,\n} from \"./actions\";\nimport initialBoxes from \"./utils/initialBoxes\";\nimport { getBoxes, getStep } from \"./selectors\";\nimport { PICK_THIRD_BOX, DISPLAY_RESULT } from \"./constants\";\n\nimport Box from \"./Box\";\nimport Button from \"./Button\";\n\nimport \"./Boxes.css\";\n\nexport default function Boxes() {\n  const allBoxes = useSelector(({ app }) => getBoxes(app));\n  const currentStep = useSelector(({ app }) => getStep(app));\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatchResetBoxes();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const dispatchKeepBox = () => dispatch(setStep(DISPLAY_RESULT));\n\n  const dispatchPickedBox = (data, step) => {\n    dispatch(setPickedBox(data));\n    dispatch(setIsReveleadByHost(data));\n    dispatch(setStep(step, data));\n  };\n\n  const dispatchResetBoxes = () => {\n    dispatch(resetBoxes(initialBoxes));\n    dispatch(setBoxWithMoney());\n  };\n\n  return (\n    <>\n      <div className=\"boxes\">\n        {allBoxes.map((box) => {\n          return (\n            <Box\n              key={box.id}\n              callBack={dispatchPickedBox}\n              data={box}\n              step={currentStep}\n            />\n          );\n        })}\n      </div>\n\n      <Button\n        className=\"button button-green\"\n        onClick={dispatchKeepBox}\n        text=\"Click here to keep box!\"\n        disabled={currentStep !== PICK_THIRD_BOX}\n      />\n\n      <Button\n        className={\"button\"}\n        onClick={dispatchResetBoxes}\n        text={\"Restart game\"}\n        disabled={currentStep !== DISPLAY_RESULT}\n      />\n    </>\n  );\n}\n","import React from \"react\";\n\nimport \"./Score.css\";\n\nexport default function Score({ data }) {\n  const { switched, kept } = data;\n  return (\n    <div className=\"score\">\n      <div>Keept box</div>\n      <div className=\"score-row\">\n        <div className=\"score-data\">\n          <b>Count:</b>\n          {` ${kept.count}`}\n        </div>\n        <div className=\"score-data\">\n          <b>Odds:</b>\n          {` ${kept.percentage} %`}\n        </div>\n      </div>\n      <div className=\"separator\" />\n      <div>Switched box</div>\n      <div className=\"score-row\">\n        <div className=\"score-data\">\n          <b>Count:</b>\n          {` ${switched.count}`}\n        </div>\n        <div className=\"score-data\">\n          <b>Odds:</b>\n          {` ${switched.percentage} %`}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getScore } from \"./selectors\";\r\nimport montyImages from \"./utils/montyImages\";\r\nimport { getRandomMonty } from \"./utils/getRandomHelper\";\r\nimport Message from \"./Message\";\r\nimport Boxes from \"./Boxes\";\r\nimport Score from \"./Score\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const score = useSelector(({ app }) => getScore(app));\r\n  return (\r\n    <div\r\n      className=\"app\"\r\n      style={{\r\n        backgroundImage: `url(${montyImages[getRandomMonty]})`,\r\n      }}\r\n    >\r\n      <Message />\r\n      <Boxes />\r\n      <Score data={score} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import produce, { current } from \"immer\";\nimport * as constants from \"./constants\";\nimport { getRandomInt, getRandomBox } from \"./utils/getRandomHelper\";\nimport initialBoxes from \"./utils/initialBoxes\";\n\nconst initialState = {\n  boxes: initialBoxes,\n  step: constants.PICK_FIRST_BOX,\n  score: {\n    switched: {\n      count: 0,\n      percentage: 0,\n      win: 0,\n    },\n    kept: {\n      count: 0,\n      percentage: 0,\n      win: 0,\n    },\n  },\n  switchedBox: false,\n};\n\nconst reducer = produce((draft, action) => {\n  const { type, boxes, data } = action;\n\n  function setPercentage(win, count) {\n    const gamesPlayed = count;\n    const gamesWon = win * 100;\n    return (gamesWon / gamesPlayed).toFixed(1);\n  }\n  // eslint-disable-next-line default-case\n  switch (type) {\n    case constants.SWITCH_BOX:\n      draft.switchedBox = true;\n      return draft;\n\n    case constants.PICK_FIRST_BOX:\n      draft.step = constants.PICK_THIRD_BOX;\n      return draft;\n\n    case constants.PICK_THIRD_BOX:\n      draft.step = constants.DISPLAY_RESULT;\n      return draft;\n\n    case constants.DISPLAY_RESULT:\n      draft.step = constants.DISPLAY_RESULT;\n      draft.score.kept.count += 1;\n      draft.score.kept.percentage = setPercentage(\n        draft.score.kept.win,\n        draft.score.kept.count\n      );\n      draft.score.kept.win += 1;\n\n      return draft;\n\n    case constants.SET_PICKED_BOX:\n      if (draft.step === constants.PICK_FIRST_BOX) {\n        draft.boxes[data.id].pickedBox = true;\n        draft.step = constants.PICK_THIRD_BOX;\n      } else if (draft.step === constants.PICK_THIRD_BOX) {\n        draft.boxes[data.id].pickedBox = true;\n        draft.step = constants.DISPLAY_RESULT;\n        draft.switchedBox = true;\n        draft.score.switched.count += 1;\n        draft.score.switched.percentage = setPercentage(\n          draft.score.switched.win,\n          draft.score.switched.count\n        );\n        draft.score.switched.win += 1;\n      }\n      return draft;\n\n    case constants.RESET_BOXES:\n      draft.boxes = boxes;\n      draft.step = constants.PICK_FIRST_BOX;\n      return draft;\n\n    case constants.SET_IS_REVELEAD_BY_HOST:\n      const currentBoxes = current(draft.boxes);\n      const losingBoxes = currentBoxes.filter((box) => box.money === false);\n      const openNumber = getRandomBox(losingBoxes.length);\n\n      let openBox = losingBoxes[openNumber];\n      if (openBox.pickedBox === true) {\n        openBox = losingBoxes[+!openNumber];\n      }\n      draft.boxes[openBox.id].isReveleadByHost = true;\n      return draft;\n\n    case constants.SET_BOX_WITH_MONEY:\n      draft.boxes[getRandomInt(0, 3)].money = true;\n      return draft;\n  }\n}, initialState);\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport reducer from \"./reducer\";\n\nconst appReducer = combineReducers({\n  app: reducer,\n});\n\nconst rootReducer = (state, action) => {\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst loggerMiddleware = createLogger({\r\n  stateTransformer: (state) => {\r\n    const newState = {};\r\n\r\n    for (const i of Object.keys(state)) {\r\n      newState[i] = state[i];\r\n    }\r\n    return newState;\r\n  },\r\n});\r\n\r\nlet composeEnhancers = compose;\r\nif (process.env.NODE_ENV === \"development\") {\r\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n}\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    process.env.NODE_ENV === \"development\"\r\n      ? applyMiddleware(loggerMiddleware)\r\n      : applyMiddleware()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}